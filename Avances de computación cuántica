Avances de computación cuántica

https://www.zapatacomputing.com/quantum-computing-careers/
https://www.zapatacomputing.com/interns/
https://qbraid.com/careers/
https://jobs.lever.co/agnostiq
https://residency.xanadu.ai/
https://xanadu.applytojob.com/apply



cnots

error_gate1 = pauli_error([('X',p_gate1), ('I', 1 - p_gate1)])

correr el modelo simulador con ruido.


error en las compuertas de un qubit.

noise_simulator T2,T1

Mostrar plots


optimizer=None

*************************
*************************



desde modelo perfecto hasta un aumento de error.

en el eje X, aumentar el error.


Segundo plot con CNOT

Aumento de error disminuye la probabilidad

500USD ----> 50,000 creditos e IOQ

En Ionq hay nativegates.
Reducir el tamaño del circuito.

11 am CDMX y 6 pm España Domingo

https://github.com/qBraid/qbraid-lab-demo/blob/main/qbraid_sdk_devices_and_jobs.ipynb


https://lab.qbraid.com/user/miguelillnino@gmail.com/lab?redirects=1

https://account.qbraid.com/





*************************
*************************
*************************

reducción de número de compuertas en las Rotraciónes pi/8,pi/4,Pi/2
y después ejecutar el circuito.

posteriormente implementar ruido en las compuertas de 1 qubit, en las de 2 qubits.

https://qiskit.org/documentation/tutorials/simulators/3_building_noise_models.html

y con ello mostrar plots con análisis de estos modelos de ruido.

Implementar el optimizador al momento de executar el circuito. 
		RAZÓN ---------> https://www.classiq.io/insights/quantum-software-optimization
			  ---------> https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwjwhqGgkOP7AhW2g2oFHWQgBWoQFnoECA8QAQ&url=https%3A%2F%2Farxiv.org%2Fpdf%2F2206.07885&usg=AOvVaw1l8ZZZpxE4CBP8-5RogUAW (Quantum Circuit Optimization and Transpilation via Parameterized Circuit Instantiation)
			  ---------> https://medium.com/qiskit/how-does-the-qiskit-transpiler-work-6710863beaac
			  ---------> https://qiskit.org/documentation/apidoc/transpiler.html
			  ---------> transpilador, compilador e interprete.
			  ---------> ¿Qué es la transpilación? La transpilación convierte el código fuente de un lenguaje de programación en un código fuente equivalente del mismo o de otro lenguaje de programación
			  ---------> https://en.wikipedia.org/wiki/Source-to-source_compiler

			  

para ver la profundidad del circuito cuantico

https://github.com/qBraid/qbraid-lab-demo/blob/main/qbraid_sdk_devices_and_jobs.ipynb

Checar el número de qubits de cada una de las computadoras cuánticas.

número de qubits

*************************
*************************
*************************
*************************
*************************
https://www.quandela.com/
quandela y ruido.

phoinics modelo continuo

modelo discreto

blit-split en lugar de cnots

quantum samples

16 qubits.


harmond, pulsos, compuertas de 3 x 3.

XANADU

https://strawberryfields.ai/
https://strawberryfields.ai/photonics/index.html


*************************
*************************
*************************
*************************
*************************

conjunto de fases activar un control
qc.p(list][])

activar control a la QRAM

sumas y restas

en kernel de 4 x 4.

4 decimales


sumatoria

0,5
1,6
2,7

izquierda derecha

coordinadas


Bell

H en 0 cnot 0,5

H en 1 cnot 1,6


QFT 

izquierda los primeros pixeles image 1

derecha segundos pixeles image 2


subrutine imagen a
subrutime imagen b


lista de 5 a 5

por batch the listas el circuito.


 5,5

 en un vector.

 flags ultimo cubits.


4,4.


ae_simulator parallelo
qiskit
qParallelo

GPU simulation



lctm cuantica

qOSF


valor promedio


el valor de los pixeles se guardan en data_0

drapper por fases.



hacer restas con division,

indice de la fase maxima

también ocupando el promedio o el maximo


del conjunto de pixeles cual es el valor maximo o promedio

de un pulling!

Grover para el valor maximo

Oraculo

indice minimo o maximo.


asignar indices al vector minimo y maximo.


erosion y dilatacion, kernel distancia pulling.


and, sumas restas y division, pullling, erosion y dilatacion

sqrt((n)) Grover

grafo a Hamiltoniano.

tensorflow quantum

vuf3nm6z



############################
############################
11/12/(2022)



    resultados de la probabilidad de la disimilitud de la compuerta swap
lidades.

x-> modelos de ruido
y-> resultados en porcentajes
x,y


Estado del arte de las computadoras NISQ
y las limitaciones de ruido. número de compuestar, qubits y resultados.

Comparación de los Resultados con la parte clasical.

el mejor de los casos peor de los casos con ruido y simulado.

Grado de libertad, confiabilidad.


plot de relación de los resultados con base en el promedio de las probab


Con base en el hardware que se puede impleemntar.


Reporte en Overleaf

Análisis para cada uno de los enfoques.

REPORTE en OVERLEAF:

Paper, tutorial

Draft Paper y/o codigo.

objetivo a conferencia o POSTER

ARVIX

código abierto en github.


Quantum depolarizing channel
https://en.wikipedia.org/wiki/Quantum_depolarizing_channel

############################
############################
22/01/2023

Fidelidades con respecto al error.

El error vs la probabilidad de 

Plot 

Basis gates = CX, ID, IF_ELSE, RZ, SX, X

funcion optimazer = 3


Probar el error con únicamente CX.

S3 ucket Random
QBraid, SDK


Plots en Draft.
Mostarr resultados en Draft.

Swap test, una y dos compuertas modelo de ruido.



Shots y tiempo en los dispositivos de Qbraid, Creditos.
############################
############################

############################
############################
Distancia Euclideana con swap test modulo separado
Distancia draper adder

1/2 de probabilidad.

0,.

$110 dolares en crédito

$10.30 en total. con 1000 shots
Inicial.

Aumentar los shots peor caso
3000.
Aumentar los shots caso promedio
2000

AKnwoledge Qbraid

11 y 12 de Febrero presentación final internamente.
UTC pendiente.


Ingles.

Modelos de ruido plots,

Diagrama

Comparación de Qiskit y Qbraid Hardware.


Nota: Quera 250 qubits 
Atomos neutros.
Iones atrapados Ionq 




['measure', 'u1', 'u2', 'u3', 'h', 'cx', 'cp', 'cy', 'cz', 'id', 'p', 'rx', 'ry', 'rz', 's', 'sdg', 'swap', 't', 'tdg', 'sx', 'sxdg', 'x', 'rxx', 'y', 'ryy', 'z', 'rzz', 'ecr']


Initialize cambiar, y sólo las que ocupo en compuertas

Propiedades de IonQ

U o U3

convertir el circuito cuantico a compuertas

qasm de 

HAcer el transpile desde arriba.


Una funciójn para Psi y phi



help.localSimulator()


Probar la compuerta swap en Hardware.

Diagrama en la metodologia 2


plot con Cnot error.


Explicar hardware de IONQ
Detalles para correr proyectos


Fidelidades de los circuitos al correr en hardware.


https://github.com/qBraid/qbraid-lab-demo/blob/main/qbraid_sdk_devices_and_jobs.ipynb


Qasc
coherencia cuantica.


U,U2,U3, RY,R

############################

############################


https://github.com/qiskit-community/qiskit-braket-provider/issues

Issue, para levantar el reporte de las compuertas que reconoce Amazon brajet, de la nueva versión de Qiskit.


U y R.

############################

############################

Diseño de las barras, por puntos en los plot

Fidelity en Experiment event.

Subir las imagenes de avances al repoprte 


Similitud->normalized result ("Probabilities") vs noise model #numeral
0,.025,.05,.075,.1,.125.


Concursos

QOSF

PAPERS

Experiencia

Links, checar cv de Alberto

Github, enlace, para ver códigos.

Ingléss.

############################
############################
############################
############################
05/03/2023

fidelidad de la C-NOT

error grate_ disminuyendo el error.
Si el hardware tuviese esa fidelidad, entonces los resultados serán prometedores.
conclusión

Limite del Cúartil de fidelidad, skweness 
Con base en IONQ o Belem, checar el límite de fidelidad.

Distribución de probabilidad, dado cierto cuartil existe una confianza de tener un resultado real. arriba del 95% por ejemplo

valor aceptable con ruido.




implmentar circuit_wrapper

Caso general de las pruebas exahustivas.




############################
############################
############################
26/03/2023
Fidelidad en el eje x 

aumentar el número de shots en cuanto mayor ruido exista.

Chacar, IOQ Real.

Varias pruebas para el promedio.

Reducción de compuertas en la Fourier

Probar Fourier en una computadora real.

Swap test, parte teoría.

con tiempo del fin de semana de Semana santa. 



##########################
############################
############################

Fidelity one wubit gate
(1-Error)
100%
99%





***FULL STACK DEVELOPER***

Qualifications

    Experience developing applications with CSS, JavaScript, TypeScript, Python
    Proficiency in one or more front-end JavaScript frameworks (e.g. Angular, Vue, React)
    Experience with AWS cloud services (e.g. EB, EC2, S3)
    Experience with NoSQL databases (e.g. MongoDB, DynamoDB)
    Experience with Node.js runtime environments and REST APIs
    Experience with Git and CI/CD workflows
    Self-motivated, and comfortable working both independently and collaboratively on complex projects in a fast-paced environment.
    Excellent written and verbal communication skills

Preferred Qualifications

    Enthusiasm for quantum computing
    Experience developing react17+
    Experience working with cypress for UI/UX testing
    Familiarity with the Jupyter stack (i.e. JupyterHub, JupyterLab, Jupyter Notebook)
    Experience with Python web frameworks (e.g. Tornado, Flask) and WebSockets


 ***Cloud DevOps Engineer ***

  Basic Qualifications

    Experience developing applications with JavaScript, TypeScript, Python
    Experience deploying/managing containerized applications with Kubernetes and Docker
    Strong experience using AWS cloud services (e.g. IAM, S3, ECR, EKS, EB, EC2)
    Experience with NoSQL databases (e.g. MongoDB, DynamoDB)
    Experience with Node.js runtime environments and REST APIs
    Experience with Git, CI/CD workflows, and event-driven automation
    Experience building cloud-based solutions and scaling cloud infrastructures
    Self-motivated, and comfortable working both independently and collaboratively on complex projects in a fast-paced environment.
    Excellent written and verbal communication skills

Preferred Qualifications

    Enthusiasm for quantum computing
    Familiarity with Jenkins, minikube, Helm
    Familiarity with the Jupyter stack (i.e. JupyterHub, JupyterLab, Jupyter Notebook)


 Basic Qualifications

    BSc in Engineering, Computer Science, Physics, or relevant related discipline.
    Familiarity with quantum computing stack (applications, compilers, circuits, algorithms, pulses)
    Strong Python and object-oriented programming skills.
    Experience with high-level scientific programming frameworks in Python.
    Experience with one or more of the following open-source quantum software packages: Qiskit, Cirq, Amazon Braket, Pennylane, pyQuil.
    Experience with software engineering best practices: testing, continuous integration, version control, documentation, and code review.
    Self-motivated, and comfortable working both independently and collaboratively on complex projects in a fast-paced environment.
    Excellent written and verbal communication skills

***Quantum Software Engineer***

Quantum Software Engineer

Remote or In-Person (Chicago, IL)

About qBraid

qBraid is a one-stop platform for accessing quantum software and hardware. We are building a cloud-based IDE that is highly optimized for quantum computing. Our mission is to provide an end-to-end experience for everyone and anyone in quantum, and by doing so, hope to accelerate the pace of the quantum computing revolution.
The Role

Your work will focus on development of the qBraid SDK, our Python toolkit for building and executing quantum programs. You will have a paramount role in this project, and be hands-on from day one helping us design, build, test, and deploy modules for quantum algorithms and applications. We are looking for engineers who are critical thinkers, analytical, and passionate about building practical solutions. You will also need to be flexible, adaptable, and a persistent problem-solver. 
Basic Qualifications

    BSc in Engineering, Computer Science, Physics, or relevant related discipline.
    Familiarity with quantum computing stack (applications, compilers, circuits, algorithms, pulses)
    Strong Python and object-oriented programming skills.
    Experience with high-level scientific programming frameworks in Python.
    Experience with one or more of the following open-source quantum software packages: Qiskit, Cirq, Amazon Braket, Pennylane, pyQuil.
    Experience with software engineering best practices: testing, continuous integration, version control, documentation, and code review.
    Self-motivated, and comfortable working both independently and collaboratively on complex projects in a fast-paced environment.
    Excellent written and verbal communication skills

Preferred Qualifications

    MSc or PhD in Engineering, Computer Science, Physics, or relevant related discipline.
    Expertise in quantum computing, as demonstrated by in-field experience, extensive coursework, thesis, or peer-reviewed publications.
    Familiarity with NISQ algorithms (e.g. VQAs, QA, QAOA)
    Familiarity with OpenQASM
    Experience developing open-source software
    Familiarity with Node.js runtime environments and REST APIs

 

At qBraid, we value each of our team members’ unique set of skills and experience and use a collaborative, user-driven approach when mapping our goals and product timelines. You will have a paramount role in this process. As a quantum software engineer at qBraid, you will have the freedom and the platform to do your very best work. Even if you don’t meet all of the criteria above, please apply! We would love to hear about how you can see yourself growing into this role, and why you are well-equipped to do so.





pip install pylatexenc


It will be a very interesting result implementing the optimization usign D-wave or https://www.quera.com/aquila


QuEra

https://www.quera.com/aquila

Cold atomic circuits

https://oxfordquantumcircuits.com/

https://github.com/qBraid/qbraid-lab-demo




amazon-braket-sdk==1.29.3

qiskit==37.2

A quantum circuit is:

"A quantum circuit is a computational routine consisting of coherent quantum operations on qubits ... It is an ordered sequence of quantum gates, measurements and resets, all of which may be conditioned on and use data from the real-time classical computation."


########################3
#########################
########################
QFT


Colocar gráfica de de complejidad número de cúbits.
Breve explicación de cuantos cúbits se ocupan.



Vector distancia 5, salen mejores resultados.

swapt test,
CNOT 



noise model.

IEEE latin maerica transaction.


Escalabilidad de los cúbits con las imágenes



Tabla de las caracteristicas de las computadoreas y trabajos fechas,






IBM	Shots  QED  CED

OQC

IonQ Harmony

IonQ Aria




############################
############################
############################
############################
22/10/2023


Justificar porque se ocupan vectores en lugar de imágenes para actualizar el ARXIV


1024 shots en Qbraid

1024 shots en Qbraid



Ideas:

Aplicación a imágenes en vídeo.

Generar Ruido 100% cuántico QRFI.

Mitigación de Error.

Transformada del dominio de frecuencias 100% cuánticos.

Aprendizaje no supervisado PCA o ICA (crear un modelo 100% cuántico) para clasificar caracterización de imágenes de textura, intermedias y planas.

Swap Test pruebas en QPU para ver la distancia euclideana con distancias más grandes

